/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        bckspace_del: bckspace_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BCKSPACE_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        terminal_tp: terminal_tp {
            compatible = "zmk,behavior-tap-dance";
            label = "TERMINAL_TP";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp T>;

            tapping-term-ms = <100>;
        };

        mo_1_3: mo_1_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_1_3";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 3>;
        };

        mo_2_4: mo_2_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_2_4";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 4>;

            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E     &kp R    &terminal_tp    &kp Y    &kp U      &kp I         &kp O    &kp P     &bckspace_del
&kp TAB     &kp A  &kp S  &kp D     &kp F    &kp G           &kp H    &kp J      &kp K         &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LSHFT   &kp Z  &kp X  &kp C     &kp V    &kp B           &kp N    &kp M      &kp COMMA     &kp DOT  &kp FSLH  &kp RSHFT
                          &kp LGUI  &mo_1_3  &kp SPACE       &mo_2_4  &kp ENTER  &kp LEFT_ALT
            >;
        };

        num-and-symbols {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6     &kp N7     &kp N8        &kp N9    &kp N0    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS  &kp EQUAL  &kp LS(PLUS)  &kp LBKT  &kp RBKT  &kp LS(UNDER)
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans        &trans    &trans    &trans
                        &trans  &trans  &trans    &trans     &trans     &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
