/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
    behaviors {
        bckspace_del: bckspace_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BCKSPACE_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        terminal_tp: terminal_tp {
            compatible = "zmk,behavior-tap-dance";
            label = "TERMINAL_TP";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp T>;

            tapping-term-ms = <100>;
        };

        mo_1_3: mo_1_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_1_3";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 3>;
        };

        mo_2_4: mo_2_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "MO_2_4";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 4>;

            tapping-term-ms = <100>;
        };

        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E     &kp R    &terminal_tp           &kp Y      &kp U    &kp I         &kp O    &kp P     &kp BACKSPACE
&kp LEFT_CONTROL  &kp A  &kp S  &kp D     &kp F    &kp G                  &kp H      &kp J    &kp K         &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LSHFT         &kp Z  &kp X  &kp C     &kp V    &kp B                  &kp N      &kp M    &kp COMMA     &kp DOT  &kp FSLH  &kp RSHFT
                                &kp LGUI  &mo_1_3  &hold_tap TAB SPACE    &kp ENTER  &mo_2_4  &kp LEFT_ALT
            >;
        };

        num-and-symbols {
            bindings = <
&trans  &kp N1         &kp N2           &kp N3    &kp N4      &kp N5         &kp N6     &kp N7     &kp N8        &kp N9    &kp N0    &trans
&trans  &kp EXCL       &kp AT_SIGN      &kp HASH  &kp DOLLAR  &kp PERCENT    &kp MINUS  &kp EQUAL  &kp LS(PLUS)  &kp LBKT  &kp RBKT  &kp UNDER
&trans  &kp AMPERSAND  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR    &kp PIPE       &kp LBRC   &kp RBRC   &kp LESS_THAN &kp GREATER_THAN   &kp BACKSLASH     &trans
                                        &trans    &trans      &trans         &trans     &trans     &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans         &trans    &kp PAGE_UP    &kp HOME        &kp UP_ARROW  &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &kp K_REFRESH  &trans    &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans         &trans    &trans         &trans          &trans        &trans     &trans  &trans
                        &trans  &trans         &trans    &trans         &trans          &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        keyboard {
            bindings = <
&trans  &bt BT_SEL 1  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                              &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
